plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.4.4"
    id("io.micronaut.test-resources") version "4.4.4"
    id("io.micronaut.aot") version "4.4.4"
}

version = "0.1"
group = "global.kajisaab"

repositories {
    mavenCentral()
}

dependencies {
    // Annotation processors
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi-adoc")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    annotationProcessor("io.soabase.record-builder:record-builder-processor:1.19")


    // Implementation dependencies
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micrometer:context-propagation")
    implementation("io.micronaut.groovy:micronaut-runtime-groovy")
    implementation("io.micronaut.data:micronaut-data-hibernate-reactive")
    implementation("io.micronaut.email:micronaut-email:1.3.0")
    implementation("io.micronaut.views:micronaut-views-thymeleaf")
    implementation("io.micronaut.views:micronaut-views-freemarker")
    implementation("org.freemarker:freemarker:2.3.31")
    implementation("com.sun.mail:jakarta.mail:2.0.1")
    implementation("io.micronaut.kafka:micronaut-kafka")
    implementation("io.micronaut.r2dbc:micronaut-r2dbc-core")
    implementation("org.hibernate.reactive:hibernate-reactive-core:1.1.2.Final") // Make sure to use the latest version
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.r2dbc:r2dbc-pool")
    implementation("com.fasterxml.jackson.module:jackson-module-jsonSchema:2.17.0")
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.17.1'
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    implementation("io.micronaut.data:micronaut-data-r2dbc")
    implementation("org.yaml:snakeyaml")
    implementation("io.micronaut.multitenancy:micronaut-multitenancy")

    // Flyway migration
    implementation("io.micronaut.flyway:micronaut-flyway")
    runtimeOnly("org.flywaydb:flyway-database-postgresql")

    // Compile-only dependencies
    compileOnly("io.micronaut:micronaut-http-client")
    compileOnly("io.micronaut.openapi:micronaut-openapi-annotations")
    compileOnly("io.soabase.record-builder:record-builder-core:1.19")

    // Runtime dependencies
    runtimeOnly("io.micronaut.security:micronaut-security-jwt:4.11.0")
    runtimeOnly("io.micronaut.validation:micronaut-validation:4.8.0")
    runtimeOnly("org.postgresql:r2dbc-postgresql")
    runtimeOnly("ch.qos.logback:logback-classic")

    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
    implementation group: 'com.google.guava', name: 'guava', version: '33.1.0-jre'

    // Test dependencies
    testImplementation("io.micronaut:micronaut-http-client")
    testImplementation("org.mockito:mockito-core")
    testResourcesService("org.postgresql:postgresql")

    // AOT Plugins
    aotPlugins platform("io.micronaut.platform:micronaut-platform:4.6.3")
    aotPlugins("io.micronaut.security:micronaut-security-aot")
}

application {
    mainClass = "global.kajisaab.Application"
}

java {
    sourceCompatibility = JavaVersion.toVersion("21")
    targetCompatibility = JavaVersion.toVersion("21")
}

graalvmNative {
    toolchainDetection = false
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("global.kajisaab.*")
    }
    testResources {
        additionalModules.add("r2dbc-postgresql")
        sharedServer = true
    }
    aot {
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
        replaceLogbackXml = true
        configurationProperties.put("micronaut.security.jwks.enabled", "false")
    }
}

tasks.named("dockerfileNative") {
    jdkVersion = "21"
}
